openapi: 3.1.0
info:
  version: '1.5'
  title: Physically Based API
  summary: A database of physically based values for CG artists.
  description: |-
    ## Features

    - **Open Database**: Access a curated collection of physically based material values
    - **Lightweight**: The entire dataset is optimized for quick loading and integration as presets
        - materials.json ```191 KB```
        - lightsources.json ```35 KB```
        - cameras.json ```222 KB```
        - lenses.json (coming in [v2](https://api.physicallybased.info/v2/))
    - **API Access**: Connect your tools to the API to get the latest updates from the database
    - **Community-Driven**: Contribute new materials or improve existing ones
    - **Free License**: All data is released under CC0 1.0

    ## Implementations

    Explore the database through these implementations:

    - Blender [Photographer 5](https://chafouin.gumroad.com/l/photographer5) by [chafouin](https://mastodon.gamedev.place/@chafouin)
    - Web [MaterialXLab](https://kwokcb.github.io/MaterialXLab/javascript/PhysicallyBasedMaterialX_out.html) by [kwokcb](https://github.com/kwokcb)
    - Web [Physically Based](https://physicallybased.info) by [AntonPalmqvist](https://github.com/AntonPalmqvist)
    - Web [Three.js GPU Path Tracer](https://gkjohnson.github.io/three-gpu-pathtracer/example/bundle/materialDatabase.html) by [gkjohnson](https://github.com/gkjohnson)

    ## Contribute

    Contributions are welcome! Whether you want to add new entries, corrections, or suggestions, your help is appreciated. See the [Github page](https://github.com/AntonPalmqvist/physically-based-api) for more info.

    ## License

    The database is made available under the [CC0 1.0](https://creativecommons.org/publicdomain/zero/1.0/legalcode) license, which means you are free to use, modify, and distribute its content without any restrictions, even for commercial purposes.

    Shader ball used for renders is from [ASWF USD WG](https://github.com/usd-wg/assets/tree/main/full_assets/StandardShaderBall) and is licensed under [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/).
  contact:
    url: 'https://physicallybased.info/about'
    name: Form
  license:
    url: 'https://creativecommons.org/publicdomain/zero/1.0/legalcode'
    name: CC0 1.0
servers:
  - url: 'https://api.physicallybased.info'
paths:
  /materials:
    get:
      tags:
        - Materials
      summary: Get materials
      description: Gets an array of all materials.
      operationId: get-materials
      requestBody:
        description: ''
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
      servers:
        - url: 'https://api.physicallybased.info'
  /lightsources:
    get:
      tags:
        - Light Sources
      summary: Get light sources
      description: Gets an array of all light sources.
      operationId: get-lightsources
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lightsource'
      servers:
        - url: 'https://api.physicallybased.info'
  /cameras:
    get:
      tags:
        - Cameras
      summary: Get cameras
      description: Gets an array of all cameras.
      operationId: get-cameras
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Camera'
      servers:
        - url: 'https://api.physicallybased.info'
tags:
  - name: Materials
  - name: Light Sources
  - name: Cameras
components:
  schemas:
    Material:
      type: object
      title: Material
      description: 'Material parameters for shading, physics simulation, and fluid simulation.'
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of the material.
          default: Name
        color:
          $ref: '#/components/schemas/color'
          description: 'Specifies the diffuse or metallic reflectance color, or in the case of a transparent material, transmission color. RGB triplet (vec3) in linear decimal format in rec709 primaries.'
        metalness:
          type: number
          description: Specifies how metallic the material appears (dials the shading model from pure dielectric to pure metal).
        specularColor:
          $ref: '#/components/schemas/color'
          description: 'Color of the specular reflection for metals, specified in the "Gulbrandsen edge tint" format. Calculated from spectral data using script from https://github.com/natyh/material-params'
        roughness:
          type: number
          description: 'The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections.'
          default: 0
        ior:
          type: number
          description: Index of refraction of a dielectric material. Does not apply to metals (conductors).
          default: 1.5
        subsurfaceRadius:
          $ref: '#/components/schemas/color'
          description: 'The approximate distance up to which light can scatter below the surface, also known as “mean free path” (MFP). Specified in centimeters.'
        transmission:
          type: number
        transmissionDepth:
          type: number
          description: Controls the depth into the volume at which the Transmission Color is realized.
        transmissionDispersion:
          type: number
          description: 'Abbe number, describing how much the index of refraction varies across wavelengths. For glass and diamonds, this is typically in the range of 10 to 70, with lower numbers giving more dispersion.'
        complexIor:
          type: array
          description: 'Complex IOR values, n (refractive index), and k (extinction coefficient), for each color channel, in the following order: nR, kR, nG, kG, nB, kB. Calculated from spectral IOR data files with script from https://github.com/natyh/material-params'
          minItems: 6
          maxItems: 6
          items:
            type: number
        thinFilmThickness:
          type: number
          description: The thickness of the thin film layer on the base (in nanometers).
        thinFilmIor:
          type: number
          description: The index of refraction of the thin-film.
          default: 1.5
        density:
          type: number
          description: Density measured in kg/m3.
        densityRange:
          type: array
          description: The typical range of density.
          minItems: 2
          maxItems: 2
          items:
            type: number
        viscosity:
          type: number
          description: Dynamic viscosity measured in millipascal-seconds (mPa⋅s) at a temperature of 20°C. 1 mPa⋅s (millipascal-second) = 1 cP (centipoise). Used for fluid simulations.
        surfaceTension:
          type: number
          description: Surface tension measured in millinewton per meter (mN/m) at a temperature of 20°C. 1 mN/m = 1 dyn/cm.
        acousticAbsorption:
          type: array
          description: 'Absorption coefficients at 125, 250, 500, 1000, 2000, and 4000 kHz.'
          minItems: 6
          maxItems: 6
          items:
            type: number
        category:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
            enum:
              - Calibration
              - Crystal
              - Gas
              - Human
              - Liquid
              - Manmade
              - Metal
              - Organic
              - Plastic
        group:
          type: string
          description: 'Can be used to group similar materials together. For example, Skin I, Skin II, and Skin III would be part of the same group: Skin.'
        description:
          $ref: '#/components/schemas/description'
        sources:
          $ref: '#/components/schemas/sources'
        tags:
          $ref: '#/components/schemas/tags'
        reference:
          type: array
          description: Links to reference images.
          uniqueItems: true
          items:
            type: string
            format: uri
      required:
        - name
        - color
        - metalness
        - roughness
        - category
        - sources
      examples:
        - name: Aluminum
          color:
            - 0.912
            - 0.914
            - 0.92
          metalness: 1
          specularColor:
            - 0.97
            - 0.979
            - 0.988
          roughness: 0
          complexIor:
            - 1.3456
            - 7.4746
            - 0.96521
            - 6.3995
            - 0.61722
            - 5.3031
          density: 2700
          category:
            - Metal
          sources:
            - 'https://refractiveindex.info/?shelf=3d&book=metals&page=aluminium'
            - 'https://docs.arnoldrenderer.com/display/A5AFMUG/Base'
            - 'https://en.wikipedia.org/wiki/Aluminium'
            - 'https://en.wikipedia.org/wiki/Density'
            - 'https://en.wikipedia.org/wiki/Mirror'
          tags:
            - aluminium
            - mirror
          reference:
            - 'https://raw.githubusercontent.com/AntonPalmqvist/physically-based-api/main/reference/render/aluminum-cycles.png'
    color:
      type: array
      title: color
      minItems: 3
      maxItems: 3
      items:
        type: number
    description:
      type: string
      title: description
      description: This field should be used for disclaimers and other useful info for CG artists that may affect the way they use the values. It's totally fine to leave this empty.
      maxLength: 500
    sources:
      type: array
      title: sources
      description: Provide at least one source for the values.
      minItems: 1
      uniqueItems: true
      items:
        type: string
        format: uri
    tags:
      type: array
      title: tags
      description: Tags for alternative names or spellings.
      uniqueItems: true
      items:
        type: string
    Lightsource:
      type: object
      title: Lightsource
      description: A light source.
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of the light source.
          default: Name
        color:
          $ref: '#/components/schemas/color'
          description: Color of the light source.
        temperature:
          type: number
          description: 'Color temperature in Kelvin, if color lies on the Planckian curve.'
          default: 6500
        temperatureRange:
          type: array
          description: The typical range of color temperature for this specific light source.
          minItems: 2
          maxItems: 2
          items:
            type: number
        intensity:
          type: number
          description: Intensity of the light emitted from the light source.
        intensityRange:
          type: array
          description: The typical range of intensity for this specific light source.
          minItems: 2
          maxItems: 2
          items:
            type: number
        unit:
          type: array
          description: 'The unit of measurement of the intensity of the light. In the case of lux, it is specified as lux at 1 meter distance from the light source, unless it''s a directional light such as the sun or the moon.'
          minItems: 1
          maxItems: 1
          items:
            type: string
            enum:
              - lm
              - lx
              - cd/m2
        angle:
          type: number
          description: 'The maximum beam angle in degrees. For a directional light, this specifies angular diameter instead.'
        sourceSize:
          type: array
          description: 'The size of the light source in centimeters. [Radius] if point or spot. [Width, Height] if surface. [Length, Radius] if cylinder.'
          minItems: 1
          maxItems: 2
          items:
            type: number
        variants:
          type: array
          description: 'If the light source comes in different variations, they can be described here.'
          minItems: 1
          uniqueItems: true
          items:
            type: object
            additionalProperties: false
            properties:
              format:
                type: string
                description: Specifies the format.
              color:
                $ref: '#/components/schemas/color'
                description: Color of the light source.
              temperature:
                type: number
                description: 'Color temperature in Kelvin, if color lies on the Planckian curve.'
                default: 6500
              intensity:
                type: number
                description: Intensity of the light emitted from the light source.
              angle:
                type: number
                description: 'The maximum beam angle in degrees. For a directional light, this specifies angular diameter instead.'
                default: 90
              sourceSize:
                type: array
                description: 'The size of the light source in centimeters. [Radius] if point or spot. [Width, Height] if surface. [Length, Radius] if cylinder.'
                minItems: 1
                maxItems: 2
                items:
                  type: number
            required:
              - format
              - color
              - intensity
        type:
          type: array
          description: 'The type of light, for DCC applications.'
          minItems: 1
          maxItems: 1
          items:
            type: string
            enum:
              - directional
              - surface
              - spot
              - point
              - cylinder
              - dome
        category:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
            enum:
              - Artificial
              - Natural
        description:
          $ref: '#/components/schemas/description'
        sources:
          $ref: '#/components/schemas/sources'
        tags:
          $ref: '#/components/schemas/tags'
      required:
        - name
        - color
        - intensity
        - unit
        - category
        - sources
      examples:
        - name: Household Light Bulb
          color:
            - 1
            - 0.415
            - 0.099
          temperature: 2700
          temperatureRange:
            - 2400
            - 6000
          intensity: 800
          intensityRange:
            - 400
            - 1000
          unit:
            - lm
          type:
            - point
          category:
            - Artificial
          description: 'Today''s household lightbulbs has a LED light source whereas older light bulbs were using a glowing tungsten filament. LED:s are much much more energy efficient and makes the use of wattage, as a measure of intensity, not very useful. This is why lumen is preferred.'
          sources:
            - 'https://en.wikipedia.org/wiki/Incandescent_light_bulb'
            - 'https://en.wikipedia.org/wiki/LED_lamp'
          tags:
            - incandescent
            - tungsten
    Camera:
      type: object
      title: Camera
      description: 'Any type of camera that is being used, or simulated, in any way in CG productions (including games).'
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of the camera.
        sensorSize:
          type: array
          description: 'Array of sensor sizes. First item specifies the size of a fully open gate. If needed, additional sizes can be added for cameras that crop the sensor.'
          items:
            type: object
            additionalProperties: false
            properties:
              format:
                type: string
                description: Specifies the sensor format.
                default: Open Gate
              size:
                type: array
                description: Sensor size in millimeters (width x height).
                minItems: 2
                maxItems: 2
                items:
                  type: number
              resolution:
                type: array
                description: 'Recording resolution measured in pixels [Width, Height]. One sensor size can have multiple recording resolutions. For still cameras, only movie recording resolutions are listed.'
                items:
                  type: object
                  properties:
                    format:
                      type: string
                      description: Specifies the recording resolution format.
                    size:
                      type: array
                      description: 'Recording resolution measured in pixels [Width, Height].'
                      items:
                        type: integer
            required:
              - format
              - size
        category:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
            enum:
              - Still
              - Movie
              - Mobile
        description:
          $ref: '#/components/schemas/description'
        sources:
          $ref: '#/components/schemas/sources'
          description: Provide at least one source for the values. Source link to official manufacturer website is preferred.
        tags:
          $ref: '#/components/schemas/tags'
      required:
        - name
        - sensorSize
        - category
        - sources
      examples:
        - name: Arri Alexa 35
          sensorSize:
            - format: '4.6K 3:2 Open Gate'
              size:
                - 27.99
                - 19.22
              resolution:
                - format: 4.6K
                  size:
                    - 4608
                    - 3164
            - format: '4.6K 16:9'
              size:
                - 27.99
                - 15.75
              resolution:
                - format: 4.6K
                  size:
                    - 4608
                    - 2592
                - format: 4K
                  size:
                    - 4096
                    - 2304
            - format: '4K 16:9'
              size:
                - 24.88
                - 14
              resolution:
                - format: 4K
                  size:
                    - 4096
                    - 2304
                - format: UHD
                  size:
                    - 3840
                    - 2160
                - format: 2K
                  size:
                    - 2048
                    - 1152
                - format: HD
                  size:
                    - 1920
                    - 1080
            - format: '4K 2:1'
              size:
                - 24.88
                - 12.44
              resolution:
                - format: 4K
                  size:
                    - 4096
                    - 2048
            - format: '3.8K 16:9'
              size:
                - 23.33
                - 13.12
              resolution:
                - format: 4K
                  size:
                    - 3840
                    - 2160
            - format: '3.3K 6:5'
              size:
                - 20.22
                - 16.95
              resolution:
                - format: 3.3K
                  size:
                    - 3328
                    - 2790
                - format: '4K 2.39:1 Ana 2x'
                  size:
                    - 4096
                    - 1716
            - format: '3K 1:1'
              size:
                - 18.66
                - 18.66
              resolution:
                - format: 3K
                  size:
                    - 3072
                    - 3072
                - format: '3.8K 2:1 Ana 2x'
                  size:
                    - 3840
                    - 2160
            - format: '2.7K 8:9'
              size:
                - 16.66
                - 18.75
              resolution:
                - format: 'UHD 16:9 Ana 2x'
                  size:
                    - 3840
                    - 2160
            - format: '2K 16:9 S16'
              size:
                - 12.44
                - 7
              resolution:
                - format: 2K
                  size:
                    - 2048
                    - 1152
          category:
            - Movie
          description: ''
          sources:
            - 'https://www.arri.com/en/camera-systems/cameras/alexa-35'
            - 'https://www.arri.com/en/camera-systems/cameras/alexa-35/alexa-35-recording-formats'
            - 'https://www.arri.com/resource/blob/296424/88454a5a3dee9fe1d3fd68e75aa3411e/alexa-35-recording-format-poster-data.pdf'
            - 'https://www.arri.com/resource/blob/277386/a8ebd70f6105162b541bc39f4ad098b5/2022-05-arri-formatsandresolutionsoverview-4-4-data.pdf'
          tags:
            - ''
